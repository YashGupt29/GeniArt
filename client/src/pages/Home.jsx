/* eslint-disable no-unused-vars */
import { useState } from "react";
import { Card } from "../components/Card";
import { FormField } from "../components/FormField";
import Loader from "../components/Loader";
//eslint-disable-next-line react/prop-types
const RenderCards = ({ data, title }) => {
  //eslint-disable-next-line react/prop-types
  if (data?.length > 0) {
    //eslint-disable-next-line react/prop-types
    return data.map((post) => <Card key={post._id} {...post} />);
  }

  return (
    <h2 className="mt-5 font-bold text-[#6449ff] text-xl uppercase">{title}</h2>
  );
};
export const Home = () => {
  const [loading, setLoading] = useState(false);
  const [post, setPost] = useState(null);
  const [searchedText, setSearchedText] = useState("");
  return (
    <section className="max-w-7xl mx-auto">
      <div>
        <h1 className="font-extrabold text-[#222328] text-[32px]">
          The Community Showcase
        </h1>
        <p className="mt-2 text-[#666e75] text-[16px] max-w-[500px]">
          Browse Through A Collection Of Imaginative and Visually Stunning
          Images Generated By GeniArt{" "}
        </p>
      </div>
      <div className="mt-16">
        <FormField />
      </div>
      <div className="mt-10">
        {loading ? (
          <div className="flex items-center justify-center">
            <Loader />
          </div>
        ) : (
          <>
            {searchedText && (
              <h2 className="text-xl font-medium text-[#666e75] mb-3">
                Showing Results for{" "}
                <span className="text-[#222328]">{searchedText}</span>
              </h2>
            )}
          </>
        )}
      </div>
      <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
        {searchedText ? (
          <RenderCards data={[]} title="No Search Results Found" />
        ) : (
          <RenderCards data={[]} title="No Post Found" />
        )}
      </div>
    </section>
  );
};
